syntax = "proto3";

service CourseService {
  rpc UploadVideo(VideoRequest) returns (VideoResponse);
  rpc UploadImage(ImageRequest) returns (ImageResponse);
  rpc SubmitCourse(SubmitCourseRequest) returns (SubmitCourseResponse);
  rpc DeleteCourse(DeleteCourseRequest) returns (DeleteCourseResponse);
  rpc EditCourse(SubmitCourseRequest) returns (SubmitCourseResponse);
  rpc FetchCourse(Filters) returns (ResponseFetchCourseList);
  rpc FetchTutorCourse(RequestFetchTutorCourse) returns (ResponseFetchCourseList);
  rpc FetchCourseDetails(RequestFetchCourseDetails) returns (ResponseFetchCourse);
  rpc AddPurchasedUsers(AddPurchasedUsersRequest) returns (AddPurchasedUsersResponse);
  rpc GetCourseByIds(GetCourseInCartRequest) returns (ResponseFetchCourseList);
  rpc AddReview(ReviewData) returns (AddReviewResponse);
  rpc FetchReviewsOfCourse(FetchReviewsOfCourseRequest) returns (FetchReviewsOfCourseResponse);
  rpc FetchPurchasedCourses(FetchPurchasedCourseRequest) returns (ResponseFetchCourseList);
  rpc Test(emptyRequest) returns (TestResponse);
}

message emptyRequest{}

message TestResponse {
    bool success = 1;
}

message Filters {
  string category = 1;
  string priceOrder = 2;
  string ratingOrder = 3;
  string search = 4;
}


message FetchPurchasedCourseRequest {
    string userId = 1;
}

message FetchReviewsOfCourseRequest {
  string courseId = 1;
}

message FetchReviewsOfCourseResponse {
  repeated ReviewData reviewData = 1;
}

message AddReviewResponse {
  string message = 1;
  int32 status = 2;
  bool success = 3;
}

message DeleteCourseRequest {
  string courseId = 1;
}

message DeleteCourseResponse {
  int32 status = 1;
  bool success = 2;
}
message GetCourseInCartRequest {
  repeated string courseIds = 1;
}

message AddPurchasedUsersRequest {
    string courseId = 1;
    string userId = 2;
}

message AddPurchasedUsersResponse {
    bool success = 1;
    string message = 2;
    bool status = 3;
}

message RequestFetchCourseDetails {
  string id = 1;
}
message RequestFetchTutorCourse {
  string tutorId = 1;
}

message ResponseFetchCourseList {
  repeated ResponseFetchCourse courses = 1;
}

message VideoRequest {
  bytes videoBinary = 1; // Video data as binary
}

message VideoResponse {
  string message = 1;
  string s3Url = 2;
  bool success = 3;
}

message ImageRequest {
  bytes imageBinary = 1;
  string imageName = 2;
}

message ImageResponse {
  string message = 1;
  string s3Url = 2;
  bool success = 3;
}


message ResponseFetchCourse {
  string courseCategory = 1;
  string courseDescription = 2;
  string courseLevel = 3;
  string coursePrice = 4;
  string courseTitle = 5;
  string demoURL = 6;
  string discountPrice = 7;
  string thumbnail = 8;
  BenefitsPrerequisites benefits_prerequisites = 9;
  repeated Module Modules = 10;
  string _id = 11;
  string tutorId = 12;
  int32 averageRating = 13;
  int32 ratingCount = 14;
  repeated string purchasedUsers = 15;
}




message SubmitCourseRequest {
  string tutorId = 1;
  string courseCategory = 2;
  string courseDescription = 3;
  string courseLevel = 4;
  string coursePrice = 5;
  string courseTitle = 6;
  string demoURL = 7;
  string discountPrice = 8;
  string thumbnail = 9;
  BenefitsPrerequisites benefits_prerequisites = 10;
  repeated Module Modules = 11;
  string courseId = 12;
}

message BenefitsPrerequisites {
  repeated string benefits = 1;
  repeated string prerequisites = 2;
}

message Module {
  string name = 1;
  string description = 2;
  repeated Lesson lessons = 3;
}

message Lesson {
  string title = 1;
  string video = 2;
  string description = 3;
  repeated Question questions = 4;
} 

message Question {
  int64 id = 1;
  string type = 2;
  string question = 3;
  string difficulty = 4;

  // Optional fields for quiz questions
  repeated string options = 5;
  int32 correctAnswer = 6;

  // Optional fields for coding questions
  string startingCode = 7;
  int32 noOfParameters = 8;
  repeated Parameter parameters = 9;
  ExpectedOutput expectedOutput = 10;
  repeated TestCase testCases = 11;
  string solution = 12;
}

message Parameter {
  string value = 1;
  string dataType = 2;
}

message ExpectedOutput {
  string value = 1;
  string dataType = 2;
}

message TestCase {
  repeated Parameter parameters = 1;
  ExpectedOutput expectedValue = 2;
}



message SubmitCourseResponse {
  string message = 1;
  bool success = 2;
  string courseId = 3;
  string courseTitle = 4;
  string thumbnail = 5;
}

message ReviewData {
  string userId = 1;
  string courseId = 2;
  int32 rating = 3;
  string comment = 4;
  string updatedAt = 5;
}